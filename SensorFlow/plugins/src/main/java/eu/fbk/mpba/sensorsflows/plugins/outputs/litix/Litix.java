// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: litix.proto

package eu.fbk.mpba.sensorsflows.plugins.outputs.litix;

public final class Litix {
  private Litix() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SensorDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SensorData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required sint32 sensor_id = 1;</code>
     */
    boolean hasSensorId();
    /**
     * <code>required sint32 sensor_id = 1;</code>
     */
    int getSensorId();

    /**
     * <code>required int64 timestamp = 2;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>required int64 timestamp = 2;</code>
     */
    long getTimestamp();

    /**
     * <code>repeated double value = 3 [packed = true];</code>
     */
    java.util.List<java.lang.Double> getValueList();
    /**
     * <code>repeated double value = 3 [packed = true];</code>
     */
    int getValueCount();
    /**
     * <code>repeated double value = 3 [packed = true];</code>
     */
    double getValue(int index);
  }
  /**
   * Protobuf type {@code SensorData}
   */
  public static final class SensorData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SensorData)
      SensorDataOrBuilder {
    // Use SensorData.newBuilder() to construct.
    private SensorData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SensorData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SensorData defaultInstance;
    public static SensorData getDefaultInstance() {
      return defaultInstance;
    }

    public SensorData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SensorData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sensorId_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readInt64();
              break;
            }
            case 25: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                value_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              value_.add(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                value_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SensorData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SensorData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.class, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.Builder.class);
    }

    public static com.google.protobuf.Parser<SensorData> PARSER =
        new com.google.protobuf.AbstractParser<SensorData>() {
      public SensorData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SensorData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SENSOR_ID_FIELD_NUMBER = 1;
    private int sensorId_;
    /**
     * <code>required sint32 sensor_id = 1;</code>
     */
    public boolean hasSensorId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 sensor_id = 1;</code>
     */
    public int getSensorId() {
      return sensorId_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    /**
     * <code>required int64 timestamp = 2;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 timestamp = 2;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> value_;
    /**
     * <code>repeated double value = 3 [packed = true];</code>
     */
    public java.util.List<java.lang.Double>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated double value = 3 [packed = true];</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated double value = 3 [packed = true];</code>
     */
    public double getValue(int index) {
      return value_.get(index);
    }
    private int valueMemoizedSerializedSize = -1;

    private void initFields() {
      sensorId_ = 0;
      timestamp_ = 0L;
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSensorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, sensorId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, timestamp_);
      }
      if (getValueList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(valueMemoizedSerializedSize);
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeDoubleNoTag(value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, sensorId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timestamp_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getValueList().size();
        size += dataSize;
        if (!getValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valueMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SensorData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SensorData)
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SensorData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SensorData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.class, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.Builder.class);
      }

      // Construct using eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sensorId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SensorData_descriptor;
      }

      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData getDefaultInstanceForType() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.getDefaultInstance();
      }

      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData build() {
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData buildPartial() {
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData result = new eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sensorId_ = sensorId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData) {
          return mergeFrom((eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData other) {
        if (other == eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.getDefaultInstance()) return this;
        if (other.hasSensorId()) {
          setSensorId(other.getSensorId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSensorId()) {
          
          return false;
        }
        if (!hasTimestamp()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sensorId_ ;
      /**
       * <code>required sint32 sensor_id = 1;</code>
       */
      public boolean hasSensorId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 sensor_id = 1;</code>
       */
      public int getSensorId() {
        return sensorId_;
      }
      /**
       * <code>required sint32 sensor_id = 1;</code>
       */
      public Builder setSensorId(int value) {
        bitField0_ |= 0x00000001;
        sensorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 sensor_id = 1;</code>
       */
      public Builder clearSensorId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sensorId_ = 0;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> value_ = java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          value_ = new java.util.ArrayList<java.lang.Double>(value_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated double value = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated double value = 3 [packed = true];</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated double value = 3 [packed = true];</code>
       */
      public double getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated double value = 3 [packed = true];</code>
       */
      public Builder setValue(
          int index, double value) {
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double value = 3 [packed = true];</code>
       */
      public Builder addValue(double value) {
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double value = 3 [packed = true];</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double value = 3 [packed = true];</code>
       */
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SensorData)
    }

    static {
      defaultInstance = new SensorData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SensorData)
  }

  public interface SensorEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SensorEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required sint32 sensor_id = 1;</code>
     */
    boolean hasSensorId();
    /**
     * <code>required sint32 sensor_id = 1;</code>
     */
    int getSensorId();

    /**
     * <code>required int64 timestamp = 2;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>required int64 timestamp = 2;</code>
     */
    long getTimestamp();

    /**
     * <code>required sint32 code = 3;</code>
     */
    boolean hasCode();
    /**
     * <code>required sint32 code = 3;</code>
     */
    int getCode();

    /**
     * <code>required string message = 4;</code>
     */
    boolean hasMessage();
    /**
     * <code>required string message = 4;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>required string message = 4;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code SensorEvent}
   */
  public static final class SensorEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SensorEvent)
      SensorEventOrBuilder {
    // Use SensorEvent.newBuilder() to construct.
    private SensorEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SensorEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SensorEvent defaultInstance;
    public static SensorEvent getDefaultInstance() {
      return defaultInstance;
    }

    public SensorEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SensorEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sensorId_ = input.readSInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              code_ = input.readSInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              message_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SensorEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SensorEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.class, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<SensorEvent> PARSER =
        new com.google.protobuf.AbstractParser<SensorEvent>() {
      public SensorEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SensorEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SENSOR_ID_FIELD_NUMBER = 1;
    private int sensorId_;
    /**
     * <code>required sint32 sensor_id = 1;</code>
     */
    public boolean hasSensorId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 sensor_id = 1;</code>
     */
    public int getSensorId() {
      return sensorId_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    /**
     * <code>required int64 timestamp = 2;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 timestamp = 2;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int CODE_FIELD_NUMBER = 3;
    private int code_;
    /**
     * <code>required sint32 code = 3;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required sint32 code = 3;</code>
     */
    public int getCode() {
      return code_;
    }

    public static final int MESSAGE_FIELD_NUMBER = 4;
    private java.lang.Object message_;
    /**
     * <code>required string message = 4;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string message = 4;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string message = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      sensorId_ = 0;
      timestamp_ = 0L;
      code_ = 0;
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSensorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMessage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, sensorId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeSInt32(3, code_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, sensorId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, code_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SensorEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SensorEvent)
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SensorEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SensorEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.class, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.Builder.class);
      }

      // Construct using eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sensorId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SensorEvent_descriptor;
      }

      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent getDefaultInstanceForType() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.getDefaultInstance();
      }

      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent build() {
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent buildPartial() {
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent result = new eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sensorId_ = sensorId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.code_ = code_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent) {
          return mergeFrom((eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent other) {
        if (other == eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.getDefaultInstance()) return this;
        if (other.hasSensorId()) {
          setSensorId(other.getSensorId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (other.hasMessage()) {
          bitField0_ |= 0x00000008;
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSensorId()) {
          
          return false;
        }
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasCode()) {
          
          return false;
        }
        if (!hasMessage()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sensorId_ ;
      /**
       * <code>required sint32 sensor_id = 1;</code>
       */
      public boolean hasSensorId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 sensor_id = 1;</code>
       */
      public int getSensorId() {
        return sensorId_;
      }
      /**
       * <code>required sint32 sensor_id = 1;</code>
       */
      public Builder setSensorId(int value) {
        bitField0_ |= 0x00000001;
        sensorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 sensor_id = 1;</code>
       */
      public Builder clearSensorId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sensorId_ = 0;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private int code_ ;
      /**
       * <code>required sint32 code = 3;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required sint32 code = 3;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>required sint32 code = 3;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000004;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 code = 3;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        code_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <code>required string message = 4;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string message = 4;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string message = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string message = 4;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string message = 4;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000008);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>required string message = 4;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        message_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SensorEvent)
    }

    static {
      defaultInstance = new SensorEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SensorEvent)
  }

  public interface SensorInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SensorInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required sint32 sensor_id = 1;</code>
     */
    boolean hasSensorId();
    /**
     * <code>required sint32 sensor_id = 1;</code>
     */
    int getSensorId();

    /**
     * <code>optional string device = 2;</code>
     */
    boolean hasDevice();
    /**
     * <code>optional string device = 2;</code>
     */
    java.lang.String getDevice();
    /**
     * <code>optional string device = 2;</code>
     */
    com.google.protobuf.ByteString
        getDeviceBytes();

    /**
     * <code>optional string type = 3;</code>
     */
    boolean hasType();
    /**
     * <code>optional string type = 3;</code>
     */
    java.lang.String getType();
    /**
     * <code>optional string type = 3;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>required string name = 4;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 4;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 4;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated string channels = 5;</code>
     */
    com.google.protobuf.ProtocolStringList
        getChannelsList();
    /**
     * <code>repeated string channels = 5;</code>
     */
    int getChannelsCount();
    /**
     * <code>repeated string channels = 5;</code>
     */
    java.lang.String getChannels(int index);
    /**
     * <code>repeated string channels = 5;</code>
     */
    com.google.protobuf.ByteString
        getChannelsBytes(int index);
  }
  /**
   * Protobuf type {@code SensorInfo}
   */
  public static final class SensorInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SensorInfo)
      SensorInfoOrBuilder {
    // Use SensorInfo.newBuilder() to construct.
    private SensorInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SensorInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SensorInfo defaultInstance;
    public static SensorInfo getDefaultInstance() {
      return defaultInstance;
    }

    public SensorInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SensorInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sensorId_ = input.readSInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              device_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              type_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              name_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                channels_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              channels_.add(bs);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          channels_ = channels_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SensorInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SensorInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.class, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<SensorInfo> PARSER =
        new com.google.protobuf.AbstractParser<SensorInfo>() {
      public SensorInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SensorInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SENSOR_ID_FIELD_NUMBER = 1;
    private int sensorId_;
    /**
     * <code>required sint32 sensor_id = 1;</code>
     */
    public boolean hasSensorId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint32 sensor_id = 1;</code>
     */
    public int getSensorId() {
      return sensorId_;
    }

    public static final int DEVICE_FIELD_NUMBER = 2;
    private java.lang.Object device_;
    /**
     * <code>optional string device = 2;</code>
     */
    public boolean hasDevice() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string device = 2;</code>
     */
    public java.lang.String getDevice() {
      java.lang.Object ref = device_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          device_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string device = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceBytes() {
      java.lang.Object ref = device_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        device_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private java.lang.Object type_;
    /**
     * <code>optional string type = 3;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string type = 3;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string type = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 4;
    private java.lang.Object name_;
    /**
     * <code>required string name = 4;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string name = 4;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHANNELS_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList channels_;
    /**
     * <code>repeated string channels = 5;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getChannelsList() {
      return channels_;
    }
    /**
     * <code>repeated string channels = 5;</code>
     */
    public int getChannelsCount() {
      return channels_.size();
    }
    /**
     * <code>repeated string channels = 5;</code>
     */
    public java.lang.String getChannels(int index) {
      return channels_.get(index);
    }
    /**
     * <code>repeated string channels = 5;</code>
     */
    public com.google.protobuf.ByteString
        getChannelsBytes(int index) {
      return channels_.getByteString(index);
    }

    private void initFields() {
      sensorId_ = 0;
      device_ = "";
      type_ = "";
      name_ = "";
      channels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSensorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(1, sensorId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDeviceBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getTypeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getNameBytes());
      }
      for (int i = 0; i < channels_.size(); i++) {
        output.writeBytes(5, channels_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, sensorId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDeviceBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTypeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < channels_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(channels_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getChannelsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SensorInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SensorInfo)
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SensorInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SensorInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.class, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.Builder.class);
      }

      // Construct using eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sensorId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        device_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        channels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SensorInfo_descriptor;
      }

      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo getDefaultInstanceForType() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.getDefaultInstance();
      }

      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo build() {
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo buildPartial() {
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo result = new eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sensorId_ = sensorId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.device_ = device_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.name_ = name_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          channels_ = channels_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.channels_ = channels_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo) {
          return mergeFrom((eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo other) {
        if (other == eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.getDefaultInstance()) return this;
        if (other.hasSensorId()) {
          setSensorId(other.getSensorId());
        }
        if (other.hasDevice()) {
          bitField0_ |= 0x00000002;
          device_ = other.device_;
          onChanged();
        }
        if (other.hasType()) {
          bitField0_ |= 0x00000004;
          type_ = other.type_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000008;
          name_ = other.name_;
          onChanged();
        }
        if (!other.channels_.isEmpty()) {
          if (channels_.isEmpty()) {
            channels_ = other.channels_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureChannelsIsMutable();
            channels_.addAll(other.channels_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSensorId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sensorId_ ;
      /**
       * <code>required sint32 sensor_id = 1;</code>
       */
      public boolean hasSensorId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 sensor_id = 1;</code>
       */
      public int getSensorId() {
        return sensorId_;
      }
      /**
       * <code>required sint32 sensor_id = 1;</code>
       */
      public Builder setSensorId(int value) {
        bitField0_ |= 0x00000001;
        sensorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint32 sensor_id = 1;</code>
       */
      public Builder clearSensorId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sensorId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object device_ = "";
      /**
       * <code>optional string device = 2;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string device = 2;</code>
       */
      public java.lang.String getDevice() {
        java.lang.Object ref = device_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            device_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string device = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceBytes() {
        java.lang.Object ref = device_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          device_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string device = 2;</code>
       */
      public Builder setDevice(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        device_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string device = 2;</code>
       */
      public Builder clearDevice() {
        bitField0_ = (bitField0_ & ~0x00000002);
        device_ = getDefaultInstance().getDevice();
        onChanged();
        return this;
      }
      /**
       * <code>optional string device = 2;</code>
       */
      public Builder setDeviceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        device_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <code>optional string type = 3;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string type = 3;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            type_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string type = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string type = 3;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string type = 3;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string type = 3;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 4;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string name = 4;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 4;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 4;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 4;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList channels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureChannelsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          channels_ = new com.google.protobuf.LazyStringArrayList(channels_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string channels = 5;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getChannelsList() {
        return channels_.getUnmodifiableView();
      }
      /**
       * <code>repeated string channels = 5;</code>
       */
      public int getChannelsCount() {
        return channels_.size();
      }
      /**
       * <code>repeated string channels = 5;</code>
       */
      public java.lang.String getChannels(int index) {
        return channels_.get(index);
      }
      /**
       * <code>repeated string channels = 5;</code>
       */
      public com.google.protobuf.ByteString
          getChannelsBytes(int index) {
        return channels_.getByteString(index);
      }
      /**
       * <code>repeated string channels = 5;</code>
       */
      public Builder setChannels(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureChannelsIsMutable();
        channels_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string channels = 5;</code>
       */
      public Builder addChannels(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureChannelsIsMutable();
        channels_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string channels = 5;</code>
       */
      public Builder addAllChannels(
          java.lang.Iterable<java.lang.String> values) {
        ensureChannelsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, channels_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string channels = 5;</code>
       */
      public Builder clearChannels() {
        channels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string channels = 5;</code>
       */
      public Builder addChannelsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureChannelsIsMutable();
        channels_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SensorInfo)
    }

    static {
      defaultInstance = new SensorInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SensorInfo)
  }

  public interface SessionMetaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SessionMeta)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string key = 1;</code>
     */
    boolean hasKey();
    /**
     * <code>required string key = 1;</code>
     */
    java.lang.String getKey();
    /**
     * <code>required string key = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>required string value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>required string value = 2;</code>
     */
    java.lang.String getValue();
    /**
     * <code>required string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();
  }
  /**
   * Protobuf type {@code SessionMeta}
   */
  public static final class SessionMeta extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SessionMeta)
      SessionMetaOrBuilder {
    // Use SessionMeta.newBuilder() to construct.
    private SessionMeta(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SessionMeta(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SessionMeta defaultInstance;
    public static SessionMeta getDefaultInstance() {
      return defaultInstance;
    }

    public SessionMeta getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SessionMeta(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              key_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              value_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SessionMeta_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SessionMeta_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.class, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.Builder.class);
    }

    public static com.google.protobuf.Parser<SessionMeta> PARSER =
        new com.google.protobuf.AbstractParser<SessionMeta>() {
      public SessionMeta parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SessionMeta(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SessionMeta> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int KEY_FIELD_NUMBER = 1;
    private java.lang.Object key_;
    /**
     * <code>required string key = 1;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string key = 1;</code>
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          key_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private java.lang.Object value_;
    /**
     * <code>required string value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string value = 2;</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      key_ = "";
      value_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getValueBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getValueBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SessionMeta}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SessionMeta)
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMetaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SessionMeta_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SessionMeta_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.class, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.Builder.class);
      }

      // Construct using eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_SessionMeta_descriptor;
      }

      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta getDefaultInstanceForType() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.getDefaultInstance();
      }

      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta build() {
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta buildPartial() {
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta result = new eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta) {
          return mergeFrom((eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta other) {
        if (other == eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.getDefaultInstance()) return this;
        if (other.hasKey()) {
          bitField0_ |= 0x00000001;
          key_ = other.key_;
          onChanged();
        }
        if (other.hasValue()) {
          bitField0_ |= 0x00000002;
          value_ = other.value_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasKey()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object key_ = "";
      /**
       * <code>required string key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string key = 1;</code>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            key_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string key = 1;</code>
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>required string key = 1;</code>
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>required string value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string value = 2;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string value = 2;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>required string value = 2;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SessionMeta)
    }

    static {
      defaultInstance = new SessionMeta(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SessionMeta)
  }

  public interface TrackSplitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TrackSplit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string track_name = 1;</code>
     */
    boolean hasTrackName();
    /**
     * <code>required string track_name = 1;</code>
     */
    java.lang.String getTrackName();
    /**
     * <code>required string track_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getTrackNameBytes();

    /**
     * <code>repeated .SensorInfo sensors = 2;</code>
     */
    java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo> 
        getSensorsList();
    /**
     * <code>repeated .SensorInfo sensors = 2;</code>
     */
    eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo getSensors(int index);
    /**
     * <code>repeated .SensorInfo sensors = 2;</code>
     */
    int getSensorsCount();
    /**
     * <code>repeated .SensorInfo sensors = 2;</code>
     */
    java.util.List<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfoOrBuilder> 
        getSensorsOrBuilderList();
    /**
     * <code>repeated .SensorInfo sensors = 2;</code>
     */
    eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfoOrBuilder getSensorsOrBuilder(
        int index);

    /**
     * <code>repeated .SensorData data = 3;</code>
     */
    java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData> 
        getDataList();
    /**
     * <code>repeated .SensorData data = 3;</code>
     */
    eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData getData(int index);
    /**
     * <code>repeated .SensorData data = 3;</code>
     */
    int getDataCount();
    /**
     * <code>repeated .SensorData data = 3;</code>
     */
    java.util.List<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorDataOrBuilder> 
        getDataOrBuilderList();
    /**
     * <code>repeated .SensorData data = 3;</code>
     */
    eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorDataOrBuilder getDataOrBuilder(
        int index);

    /**
     * <code>repeated .SensorEvent events = 4;</code>
     */
    java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent> 
        getEventsList();
    /**
     * <code>repeated .SensorEvent events = 4;</code>
     */
    eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent getEvents(int index);
    /**
     * <code>repeated .SensorEvent events = 4;</code>
     */
    int getEventsCount();
    /**
     * <code>repeated .SensorEvent events = 4;</code>
     */
    java.util.List<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEventOrBuilder> 
        getEventsOrBuilderList();
    /**
     * <code>repeated .SensorEvent events = 4;</code>
     */
    eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEventOrBuilder getEventsOrBuilder(
        int index);

    /**
     * <code>repeated .SessionMeta meta = 5;</code>
     */
    java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta> 
        getMetaList();
    /**
     * <code>repeated .SessionMeta meta = 5;</code>
     */
    eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta getMeta(int index);
    /**
     * <code>repeated .SessionMeta meta = 5;</code>
     */
    int getMetaCount();
    /**
     * <code>repeated .SessionMeta meta = 5;</code>
     */
    java.util.List<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMetaOrBuilder> 
        getMetaOrBuilderList();
    /**
     * <code>repeated .SessionMeta meta = 5;</code>
     */
    eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMetaOrBuilder getMetaOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code TrackSplit}
   */
  public static final class TrackSplit extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:TrackSplit)
      TrackSplitOrBuilder {
    // Use TrackSplit.newBuilder() to construct.
    private TrackSplit(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TrackSplit(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TrackSplit defaultInstance;
    public static TrackSplit getDefaultInstance() {
      return defaultInstance;
    }

    public TrackSplit getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TrackSplit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              trackName_ = bs;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                sensors_ = new java.util.ArrayList<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              sensors_.add(input.readMessage(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                data_ = new java.util.ArrayList<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData>();
                mutable_bitField0_ |= 0x00000004;
              }
              data_.add(input.readMessage(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                events_ = new java.util.ArrayList<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent>();
                mutable_bitField0_ |= 0x00000008;
              }
              events_.add(input.readMessage(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                meta_ = new java.util.ArrayList<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta>();
                mutable_bitField0_ |= 0x00000010;
              }
              meta_.add(input.readMessage(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          sensors_ = java.util.Collections.unmodifiableList(sensors_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          data_ = java.util.Collections.unmodifiableList(data_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          events_ = java.util.Collections.unmodifiableList(events_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          meta_ = java.util.Collections.unmodifiableList(meta_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_TrackSplit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_TrackSplit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit.class, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit.Builder.class);
    }

    public static com.google.protobuf.Parser<TrackSplit> PARSER =
        new com.google.protobuf.AbstractParser<TrackSplit>() {
      public TrackSplit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrackSplit(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TrackSplit> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TRACK_NAME_FIELD_NUMBER = 1;
    private java.lang.Object trackName_;
    /**
     * <code>required string track_name = 1;</code>
     */
    public boolean hasTrackName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string track_name = 1;</code>
     */
    public java.lang.String getTrackName() {
      java.lang.Object ref = trackName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          trackName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string track_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTrackNameBytes() {
      java.lang.Object ref = trackName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        trackName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SENSORS_FIELD_NUMBER = 2;
    private java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo> sensors_;
    /**
     * <code>repeated .SensorInfo sensors = 2;</code>
     */
    public java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo> getSensorsList() {
      return sensors_;
    }
    /**
     * <code>repeated .SensorInfo sensors = 2;</code>
     */
    public java.util.List<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfoOrBuilder> 
        getSensorsOrBuilderList() {
      return sensors_;
    }
    /**
     * <code>repeated .SensorInfo sensors = 2;</code>
     */
    public int getSensorsCount() {
      return sensors_.size();
    }
    /**
     * <code>repeated .SensorInfo sensors = 2;</code>
     */
    public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo getSensors(int index) {
      return sensors_.get(index);
    }
    /**
     * <code>repeated .SensorInfo sensors = 2;</code>
     */
    public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfoOrBuilder getSensorsOrBuilder(
        int index) {
      return sensors_.get(index);
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData> data_;
    /**
     * <code>repeated .SensorData data = 3;</code>
     */
    public java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData> getDataList() {
      return data_;
    }
    /**
     * <code>repeated .SensorData data = 3;</code>
     */
    public java.util.List<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorDataOrBuilder> 
        getDataOrBuilderList() {
      return data_;
    }
    /**
     * <code>repeated .SensorData data = 3;</code>
     */
    public int getDataCount() {
      return data_.size();
    }
    /**
     * <code>repeated .SensorData data = 3;</code>
     */
    public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData getData(int index) {
      return data_.get(index);
    }
    /**
     * <code>repeated .SensorData data = 3;</code>
     */
    public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorDataOrBuilder getDataOrBuilder(
        int index) {
      return data_.get(index);
    }

    public static final int EVENTS_FIELD_NUMBER = 4;
    private java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent> events_;
    /**
     * <code>repeated .SensorEvent events = 4;</code>
     */
    public java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent> getEventsList() {
      return events_;
    }
    /**
     * <code>repeated .SensorEvent events = 4;</code>
     */
    public java.util.List<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEventOrBuilder> 
        getEventsOrBuilderList() {
      return events_;
    }
    /**
     * <code>repeated .SensorEvent events = 4;</code>
     */
    public int getEventsCount() {
      return events_.size();
    }
    /**
     * <code>repeated .SensorEvent events = 4;</code>
     */
    public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent getEvents(int index) {
      return events_.get(index);
    }
    /**
     * <code>repeated .SensorEvent events = 4;</code>
     */
    public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEventOrBuilder getEventsOrBuilder(
        int index) {
      return events_.get(index);
    }

    public static final int META_FIELD_NUMBER = 5;
    private java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta> meta_;
    /**
     * <code>repeated .SessionMeta meta = 5;</code>
     */
    public java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta> getMetaList() {
      return meta_;
    }
    /**
     * <code>repeated .SessionMeta meta = 5;</code>
     */
    public java.util.List<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMetaOrBuilder> 
        getMetaOrBuilderList() {
      return meta_;
    }
    /**
     * <code>repeated .SessionMeta meta = 5;</code>
     */
    public int getMetaCount() {
      return meta_.size();
    }
    /**
     * <code>repeated .SessionMeta meta = 5;</code>
     */
    public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta getMeta(int index) {
      return meta_.get(index);
    }
    /**
     * <code>repeated .SessionMeta meta = 5;</code>
     */
    public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMetaOrBuilder getMetaOrBuilder(
        int index) {
      return meta_.get(index);
    }

    private void initFields() {
      trackName_ = "";
      sensors_ = java.util.Collections.emptyList();
      data_ = java.util.Collections.emptyList();
      events_ = java.util.Collections.emptyList();
      meta_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTrackName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSensorsCount(); i++) {
        if (!getSensors(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDataCount(); i++) {
        if (!getData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getEventsCount(); i++) {
        if (!getEvents(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMetaCount(); i++) {
        if (!getMeta(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTrackNameBytes());
      }
      for (int i = 0; i < sensors_.size(); i++) {
        output.writeMessage(2, sensors_.get(i));
      }
      for (int i = 0; i < data_.size(); i++) {
        output.writeMessage(3, data_.get(i));
      }
      for (int i = 0; i < events_.size(); i++) {
        output.writeMessage(4, events_.get(i));
      }
      for (int i = 0; i < meta_.size(); i++) {
        output.writeMessage(5, meta_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTrackNameBytes());
      }
      for (int i = 0; i < sensors_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sensors_.get(i));
      }
      for (int i = 0; i < data_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, data_.get(i));
      }
      for (int i = 0; i < events_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, events_.get(i));
      }
      for (int i = 0; i < meta_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, meta_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TrackSplit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TrackSplit)
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_TrackSplit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_TrackSplit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit.class, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit.Builder.class);
      }

      // Construct using eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSensorsFieldBuilder();
          getDataFieldBuilder();
          getEventsFieldBuilder();
          getMetaFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        trackName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sensorsBuilder_ == null) {
          sensors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sensorsBuilder_.clear();
        }
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          dataBuilder_.clear();
        }
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          eventsBuilder_.clear();
        }
        if (metaBuilder_ == null) {
          meta_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          metaBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.internal_static_TrackSplit_descriptor;
      }

      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit getDefaultInstanceForType() {
        return eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit.getDefaultInstance();
      }

      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit build() {
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit buildPartial() {
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit result = new eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.trackName_ = trackName_;
        if (sensorsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            sensors_ = java.util.Collections.unmodifiableList(sensors_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sensors_ = sensors_;
        } else {
          result.sensors_ = sensorsBuilder_.build();
        }
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        if (eventsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            events_ = java.util.Collections.unmodifiableList(events_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.events_ = events_;
        } else {
          result.events_ = eventsBuilder_.build();
        }
        if (metaBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            meta_ = java.util.Collections.unmodifiableList(meta_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.meta_ = meta_;
        } else {
          result.meta_ = metaBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit) {
          return mergeFrom((eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit other) {
        if (other == eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit.getDefaultInstance()) return this;
        if (other.hasTrackName()) {
          bitField0_ |= 0x00000001;
          trackName_ = other.trackName_;
          onChanged();
        }
        if (sensorsBuilder_ == null) {
          if (!other.sensors_.isEmpty()) {
            if (sensors_.isEmpty()) {
              sensors_ = other.sensors_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSensorsIsMutable();
              sensors_.addAll(other.sensors_);
            }
            onChanged();
          }
        } else {
          if (!other.sensors_.isEmpty()) {
            if (sensorsBuilder_.isEmpty()) {
              sensorsBuilder_.dispose();
              sensorsBuilder_ = null;
              sensors_ = other.sensors_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sensorsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSensorsFieldBuilder() : null;
            } else {
              sensorsBuilder_.addAllMessages(other.sensors_);
            }
          }
        }
        if (dataBuilder_ == null) {
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
        } else {
          if (!other.data_.isEmpty()) {
            if (dataBuilder_.isEmpty()) {
              dataBuilder_.dispose();
              dataBuilder_ = null;
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000004);
              dataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataFieldBuilder() : null;
            } else {
              dataBuilder_.addAllMessages(other.data_);
            }
          }
        }
        if (eventsBuilder_ == null) {
          if (!other.events_.isEmpty()) {
            if (events_.isEmpty()) {
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureEventsIsMutable();
              events_.addAll(other.events_);
            }
            onChanged();
          }
        } else {
          if (!other.events_.isEmpty()) {
            if (eventsBuilder_.isEmpty()) {
              eventsBuilder_.dispose();
              eventsBuilder_ = null;
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000008);
              eventsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEventsFieldBuilder() : null;
            } else {
              eventsBuilder_.addAllMessages(other.events_);
            }
          }
        }
        if (metaBuilder_ == null) {
          if (!other.meta_.isEmpty()) {
            if (meta_.isEmpty()) {
              meta_ = other.meta_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureMetaIsMutable();
              meta_.addAll(other.meta_);
            }
            onChanged();
          }
        } else {
          if (!other.meta_.isEmpty()) {
            if (metaBuilder_.isEmpty()) {
              metaBuilder_.dispose();
              metaBuilder_ = null;
              meta_ = other.meta_;
              bitField0_ = (bitField0_ & ~0x00000010);
              metaBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaFieldBuilder() : null;
            } else {
              metaBuilder_.addAllMessages(other.meta_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTrackName()) {
          
          return false;
        }
        for (int i = 0; i < getSensorsCount(); i++) {
          if (!getSensors(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getDataCount(); i++) {
          if (!getData(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getEventsCount(); i++) {
          if (!getEvents(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMetaCount(); i++) {
          if (!getMeta(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.TrackSplit) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object trackName_ = "";
      /**
       * <code>required string track_name = 1;</code>
       */
      public boolean hasTrackName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string track_name = 1;</code>
       */
      public java.lang.String getTrackName() {
        java.lang.Object ref = trackName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            trackName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string track_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTrackNameBytes() {
        java.lang.Object ref = trackName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          trackName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string track_name = 1;</code>
       */
      public Builder setTrackName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        trackName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string track_name = 1;</code>
       */
      public Builder clearTrackName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        trackName_ = getDefaultInstance().getTrackName();
        onChanged();
        return this;
      }
      /**
       * <code>required string track_name = 1;</code>
       */
      public Builder setTrackNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        trackName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo> sensors_ =
        java.util.Collections.emptyList();
      private void ensureSensorsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          sensors_ = new java.util.ArrayList<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo>(sensors_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.Builder, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfoOrBuilder> sensorsBuilder_;

      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo> getSensorsList() {
        if (sensorsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sensors_);
        } else {
          return sensorsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public int getSensorsCount() {
        if (sensorsBuilder_ == null) {
          return sensors_.size();
        } else {
          return sensorsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo getSensors(int index) {
        if (sensorsBuilder_ == null) {
          return sensors_.get(index);
        } else {
          return sensorsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public Builder setSensors(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorsIsMutable();
          sensors_.set(index, value);
          onChanged();
        } else {
          sensorsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public Builder setSensors(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.set(index, builderForValue.build());
          onChanged();
        } else {
          sensorsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public Builder addSensors(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorsIsMutable();
          sensors_.add(value);
          onChanged();
        } else {
          sensorsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public Builder addSensors(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo value) {
        if (sensorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSensorsIsMutable();
          sensors_.add(index, value);
          onChanged();
        } else {
          sensorsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public Builder addSensors(
          eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.add(builderForValue.build());
          onChanged();
        } else {
          sensorsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public Builder addSensors(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.Builder builderForValue) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.add(index, builderForValue.build());
          onChanged();
        } else {
          sensorsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public Builder addAllSensors(
          java.lang.Iterable<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo> values) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sensors_);
          onChanged();
        } else {
          sensorsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public Builder clearSensors() {
        if (sensorsBuilder_ == null) {
          sensors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sensorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public Builder removeSensors(int index) {
        if (sensorsBuilder_ == null) {
          ensureSensorsIsMutable();
          sensors_.remove(index);
          onChanged();
        } else {
          sensorsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.Builder getSensorsBuilder(
          int index) {
        return getSensorsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfoOrBuilder getSensorsOrBuilder(
          int index) {
        if (sensorsBuilder_ == null) {
          return sensors_.get(index);  } else {
          return sensorsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public java.util.List<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfoOrBuilder> 
           getSensorsOrBuilderList() {
        if (sensorsBuilder_ != null) {
          return sensorsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sensors_);
        }
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.Builder addSensorsBuilder() {
        return getSensorsFieldBuilder().addBuilder(
            eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.Builder addSensorsBuilder(
          int index) {
        return getSensorsFieldBuilder().addBuilder(
            index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .SensorInfo sensors = 2;</code>
       */
      public java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.Builder> 
           getSensorsBuilderList() {
        return getSensorsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.Builder, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfoOrBuilder> 
          getSensorsFieldBuilder() {
        if (sensorsBuilder_ == null) {
          sensorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfo.Builder, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorInfoOrBuilder>(
                  sensors_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          sensors_ = null;
        }
        return sensorsBuilder_;
      }

      private java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData> data_ =
        java.util.Collections.emptyList();
      private void ensureDataIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          data_ = new java.util.ArrayList<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData>(data_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.Builder, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorDataOrBuilder> dataBuilder_;

      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData> getDataList() {
        if (dataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(data_);
        } else {
          return dataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public int getDataCount() {
        if (dataBuilder_ == null) {
          return data_.size();
        } else {
          return dataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData getData(int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);
        } else {
          return dataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public Builder setData(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
        } else {
          dataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public Builder setData(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public Builder addData(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
        } else {
          dataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public Builder addData(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataIsMutable();
          data_.add(index, value);
          onChanged();
        } else {
          dataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public Builder addData(
          eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public Builder addData(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public Builder addAllData(
          java.lang.Iterable<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData> values) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
        } else {
          dataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          dataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public Builder removeData(int index) {
        if (dataBuilder_ == null) {
          ensureDataIsMutable();
          data_.remove(index);
          onChanged();
        } else {
          dataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.Builder getDataBuilder(
          int index) {
        return getDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorDataOrBuilder getDataOrBuilder(
          int index) {
        if (dataBuilder_ == null) {
          return data_.get(index);  } else {
          return dataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public java.util.List<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorDataOrBuilder> 
           getDataOrBuilderList() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(data_);
        }
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.Builder addDataBuilder() {
        return getDataFieldBuilder().addBuilder(
            eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.getDefaultInstance());
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.Builder addDataBuilder(
          int index) {
        return getDataFieldBuilder().addBuilder(
            index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.getDefaultInstance());
      }
      /**
       * <code>repeated .SensorData data = 3;</code>
       */
      public java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.Builder> 
           getDataBuilderList() {
        return getDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.Builder, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorData.Builder, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorDataOrBuilder>(
                  data_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      private java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent> events_ =
        java.util.Collections.emptyList();
      private void ensureEventsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          events_ = new java.util.ArrayList<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent>(events_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.Builder, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEventOrBuilder> eventsBuilder_;

      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent> getEventsList() {
        if (eventsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(events_);
        } else {
          return eventsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public int getEventsCount() {
        if (eventsBuilder_ == null) {
          return events_.size();
        } else {
          return eventsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent getEvents(int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);
        } else {
          return eventsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public Builder setEvents(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.set(index, value);
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public Builder setEvents(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.set(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public Builder addEvents(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public Builder addEvents(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(index, value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public Builder addEvents(
          eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public Builder addEvents(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public Builder addAllEvents(
          java.lang.Iterable<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent> values) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, events_);
          onChanged();
        } else {
          eventsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public Builder clearEvents() {
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          eventsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public Builder removeEvents(int index) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.remove(index);
          onChanged();
        } else {
          eventsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.Builder getEventsBuilder(
          int index) {
        return getEventsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEventOrBuilder getEventsOrBuilder(
          int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);  } else {
          return eventsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public java.util.List<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEventOrBuilder> 
           getEventsOrBuilderList() {
        if (eventsBuilder_ != null) {
          return eventsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(events_);
        }
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.Builder addEventsBuilder() {
        return getEventsFieldBuilder().addBuilder(
            eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.Builder addEventsBuilder(
          int index) {
        return getEventsFieldBuilder().addBuilder(
            index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .SensorEvent events = 4;</code>
       */
      public java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.Builder> 
           getEventsBuilderList() {
        return getEventsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.Builder, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEventOrBuilder> 
          getEventsFieldBuilder() {
        if (eventsBuilder_ == null) {
          eventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEvent.Builder, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SensorEventOrBuilder>(
                  events_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          events_ = null;
        }
        return eventsBuilder_;
      }

      private java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta> meta_ =
        java.util.Collections.emptyList();
      private void ensureMetaIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          meta_ = new java.util.ArrayList<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta>(meta_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.Builder, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMetaOrBuilder> metaBuilder_;

      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta> getMetaList() {
        if (metaBuilder_ == null) {
          return java.util.Collections.unmodifiableList(meta_);
        } else {
          return metaBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public int getMetaCount() {
        if (metaBuilder_ == null) {
          return meta_.size();
        } else {
          return metaBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta getMeta(int index) {
        if (metaBuilder_ == null) {
          return meta_.get(index);
        } else {
          return metaBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public Builder setMeta(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta value) {
        if (metaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaIsMutable();
          meta_.set(index, value);
          onChanged();
        } else {
          metaBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public Builder setMeta(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.Builder builderForValue) {
        if (metaBuilder_ == null) {
          ensureMetaIsMutable();
          meta_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public Builder addMeta(eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta value) {
        if (metaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaIsMutable();
          meta_.add(value);
          onChanged();
        } else {
          metaBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public Builder addMeta(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta value) {
        if (metaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaIsMutable();
          meta_.add(index, value);
          onChanged();
        } else {
          metaBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public Builder addMeta(
          eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.Builder builderForValue) {
        if (metaBuilder_ == null) {
          ensureMetaIsMutable();
          meta_.add(builderForValue.build());
          onChanged();
        } else {
          metaBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public Builder addMeta(
          int index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.Builder builderForValue) {
        if (metaBuilder_ == null) {
          ensureMetaIsMutable();
          meta_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public Builder addAllMeta(
          java.lang.Iterable<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta> values) {
        if (metaBuilder_ == null) {
          ensureMetaIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, meta_);
          onChanged();
        } else {
          metaBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public Builder clearMeta() {
        if (metaBuilder_ == null) {
          meta_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          metaBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public Builder removeMeta(int index) {
        if (metaBuilder_ == null) {
          ensureMetaIsMutable();
          meta_.remove(index);
          onChanged();
        } else {
          metaBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.Builder getMetaBuilder(
          int index) {
        return getMetaFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMetaOrBuilder getMetaOrBuilder(
          int index) {
        if (metaBuilder_ == null) {
          return meta_.get(index);  } else {
          return metaBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public java.util.List<? extends eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMetaOrBuilder> 
           getMetaOrBuilderList() {
        if (metaBuilder_ != null) {
          return metaBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(meta_);
        }
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.Builder addMetaBuilder() {
        return getMetaFieldBuilder().addBuilder(
            eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.getDefaultInstance());
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.Builder addMetaBuilder(
          int index) {
        return getMetaFieldBuilder().addBuilder(
            index, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.getDefaultInstance());
      }
      /**
       * <code>repeated .SessionMeta meta = 5;</code>
       */
      public java.util.List<eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.Builder> 
           getMetaBuilderList() {
        return getMetaFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.Builder, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMetaOrBuilder> 
          getMetaFieldBuilder() {
        if (metaBuilder_ == null) {
          metaBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMeta.Builder, eu.fbk.mpba.sensorsflows.plugins.outputs.litix.Litix.SessionMetaOrBuilder>(
                  meta_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          meta_ = null;
        }
        return metaBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:TrackSplit)
    }

    static {
      defaultInstance = new TrackSplit(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TrackSplit)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SensorData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SensorData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SensorEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SensorEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SensorInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SensorInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SessionMeta_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SessionMeta_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrackSplit_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TrackSplit_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013litix.proto\"E\n\nSensorData\022\021\n\tsensor_id" +
      "\030\001 \002(\021\022\021\n\ttimestamp\030\002 \002(\003\022\021\n\005value\030\003 \003(\001" +
      "B\002\020\001\"R\n\013SensorEvent\022\021\n\tsensor_id\030\001 \002(\021\022\021" +
      "\n\ttimestamp\030\002 \002(\003\022\014\n\004code\030\003 \002(\021\022\017\n\007messa" +
      "ge\030\004 \002(\t\"]\n\nSensorInfo\022\021\n\tsensor_id\030\001 \002(" +
      "\021\022\016\n\006device\030\002 \001(\t\022\014\n\004type\030\003 \001(\t\022\014\n\004name\030" +
      "\004 \002(\t\022\020\n\010channels\030\005 \003(\t\")\n\013SessionMeta\022\013" +
      "\n\003key\030\001 \002(\t\022\r\n\005value\030\002 \002(\t\"\223\001\n\nTrackSpli" +
      "t\022\022\n\ntrack_name\030\001 \002(\t\022\034\n\007sensors\030\002 \003(\0132\013" +
      ".SensorInfo\022\031\n\004data\030\003 \003(\0132\013.SensorData\022\034",
      "\n\006events\030\004 \003(\0132\014.SensorEvent\022\032\n\004meta\030\005 \003" +
      "(\0132\014.SessionMetaB0\n.eu.fbk.mpba.sensorsf" +
      "lows.plugins.outputs.litix"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_SensorData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SensorData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SensorData_descriptor,
        new java.lang.String[] { "SensorId", "Timestamp", "Value", });
    internal_static_SensorEvent_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SensorEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SensorEvent_descriptor,
        new java.lang.String[] { "SensorId", "Timestamp", "Code", "Message", });
    internal_static_SensorInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_SensorInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SensorInfo_descriptor,
        new java.lang.String[] { "SensorId", "Device", "Type", "Name", "Channels", });
    internal_static_SessionMeta_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_SessionMeta_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SessionMeta_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrackSplit_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_TrackSplit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_TrackSplit_descriptor,
        new java.lang.String[] { "TrackName", "Sensors", "Data", "Events", "Meta", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
